generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cart {
  id         String       @id @db.Uuid
  user_id    String       @unique @db.Uuid
  user       user         @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  cart_items cart_items[]

  @@index([user_id], map: "idx_cart_user")
}

model cart_items {
  cart_id    String   @db.Uuid
  product_id String   @db.Uuid
  quantity   Int?     @default(1)
  cart       cart     @relation(fields: [cart_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products   products @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([cart_id, product_id])
}

model category {
  id                                   String     @id @db.Uuid
  name                                 String     @db.VarChar
  description                          String?    @db.VarChar
  products_products_categoryTocategory products[] @relation("products_categoryTocategory")

  @@index([name], map: "idx_category_name")
}

model order {
  id          String        @id @db.Uuid
  user_id     String        @db.Uuid
  price       Int
  created_at  DateTime?     @default(now()) @db.Timestamp(6)
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  order_items order_items[]

  @@index([user_id], map: "idx_order_user")
}

model order_items {
  order_id   String   @db.Uuid
  product_id String   @db.Uuid
  quantity   Int?     @default(1)
  order      order    @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  products   products @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([order_id, product_id])
}

model products {
  id                                   String        @id @db.Uuid
  name                                 String        @db.VarChar
  price                                Int
  description                          String?       @db.VarChar
  category                             String?       @db.Uuid
  created_at                           DateTime?     @default(now()) @db.Timestamp(6)
  seller_id                            String        @db.Uuid
  cart_items                           cart_items[]
  order_items                          order_items[]
  category_products_categoryTocategory category?     @relation("products_categoryTocategory", fields: [category], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user                                 user          @relation(fields: [seller_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([name], map: "idx_product_name")
}

model user {
  id       String     @id @db.Uuid
  name     String     @db.VarChar
  email    String     @unique @db.VarChar
  password String     @db.VarChar
  phone    Int?
  address  String?    @db.VarChar
  type     user_type
  cart     cart?
  order    order[]
  products products[]

  @@index([email], map: "idx_user_email")
}

enum user_type {
  buyer
  seller
  admin
}
